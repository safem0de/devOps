apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow
  namespace: apache-airflow-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox
        command: ["/bin/sh", "-c", "chown -R 50000:50000 /opt/airflow && chmod -R 777 /opt/airflow"]
        volumeMounts:
        - name: airflow-storage
          mountPath: /opt/airflow
        - name: dags-storage
          mountPath: /opt/airflow/dags

      - name: wait-for-db
        image: busybox
        command: ["/bin/sh", "-c", "until nc -z postgres 5432; do echo waiting for db; sleep 2; done;"]

      - name: wait-for-redis
        image: busybox
        command: ["/bin/sh", "-c", "until nc -z redis 6379; do echo waiting for redis; sleep 2; done;"]

      - name: airflow-init
        image: apache/airflow:latest
        imagePullPolicy: Never
        command: ["/bin/bash", "-c"]
        args:
          - |
            echo "Waiting for PostgreSQL...";
            until nc -z postgres 5432; do sleep 2; done;
            echo "PostgreSQL is ready!";
            airflow db init &&
            airflow users create --username admin --password admin --firstname Airflow --lastname Admin --role Admin --email admin@example.com
        securityContext:
          runAsUser: 50000
          runAsGroup: 50000
        env:
        - name: AIRFLOW_HOME
          value: "/opt/airflow"
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
        volumeMounts:
        - name: airflow-storage
          mountPath: /opt/airflow

      containers:
      - name: airflow-scheduler
        image: apache/airflow:latest
        imagePullPolicy: Never
        command: ["airflow", "scheduler"]
        securityContext:
          runAsUser: 50000
          runAsGroup: 50000
        env:
        - name: AIRFLOW_HOME
          value: "/opt/airflow"
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
        volumeMounts:
        - name: airflow-config
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-storage
          mountPath: /opt/airflow
        - name: dags-storage
          mountPath: /opt/airflow/dags

      - name: airflow-webserver
        image: apache/airflow:latest
        imagePullPolicy: Never
        command: ["airflow", "webserver"]
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 50000
          runAsGroup: 50000
        env:
        - name: AIRFLOW_HOME
          value: "/opt/airflow"
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
        volumeMounts:
        - name: airflow-config
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-storage
          mountPath: /opt/airflow
        - name: dags-storage
          mountPath: /opt/airflow/dags

      - name: airflow-worker
        image: apache/airflow:latest
        imagePullPolicy: Never
        command: ["airflow", "celery", "worker"]
        securityContext:
          runAsUser: 50000
          runAsGroup: 50000
        env:
        - name: AIRFLOW_HOME
          value: "/opt/airflow"
        - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
          value: "postgresql+psycopg2://airflow:airflow@postgres/airflow"
        volumeMounts:
        - name: airflow-config
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-storage
          mountPath: /opt/airflow
        - name: dags-storage
          mountPath: /opt/airflow/dags

      - name: git-sync
        image: registry.k8s.io/git-sync/git-sync:v3.6.6
        imagePullPolicy: Always
        args:
          - "--repo=https://github.com/safem0de/test-dags.git"
          - "--branch=main"
          - "--wait=30"
          - "--root=/git"
          - "--dest=."
          - "--one-time=false"
        securityContext:
          runAsUser: 50000
          runAsGroup: 50000
        volumeMounts:
        - name: dags-storage
          mountPath: /git

      volumes:
      - name: airflow-config
        configMap:
          name: airflow-config
      - name: airflow-storage
        persistentVolumeClaim:
          claimName: airflow-pvc
      - name: dags-storage
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: airflow-webserver
  namespace: apache-airflow-test
spec:
  type: NodePort
  selector:
    app: airflow
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30081
