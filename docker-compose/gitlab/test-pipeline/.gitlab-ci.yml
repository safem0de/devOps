stages:
  - build
  - deploy

# Shared defaults
variables:
  REGISTRY_ADDR: host.docker.internal:5005
  DOCKER_HOST: unix:///var/run/docker.sock
  PROJECT_SUBDIR: docker-compose/gitlab/test-pipeline
  CONTEXT_PATH: ${PROJECT_SUBDIR}/nextjs-poc

.docker_job:
  image: docker:stable
  tags:
    - docker
  before_script:
    - set -eux
    # Trust self-signed registry CA if provided
    - |
      if [ -n "${CA_CERT_BASE64:-}" ]; then \
        mkdir -p "/etc/docker/certs.d/${REGISTRY_ADDR}"; \
        echo "$CA_CERT_BASE64" | base64 -d > "/etc/docker/certs.d/${REGISTRY_ADDR}/ca.crt"; \
      else \
        echo "CA_CERT_BASE64 not set; skipping CA install"; \
      fi
    - docker version || true
    - docker info || true

# -------- BUILD --------
build-image:
  stage: build
  extends: .docker_job
  script:
    - |
      IMAGE_TAG="${REGISTRY_ADDR}/root/test-pipeline:${CI_COMMIT_SHORT_SHA:-dev}"
      echo "IMAGE_TAG=${IMAGE_TAG}" > build.env
      echo "Using tag: ${IMAGE_TAG}"

      echo "Login to registry"
      : "${REGISTRY_USER:?Set REGISTRY_USER in CI variables}"
      : "${REGISTRY_PASSWORD:?Set REGISTRY_PASSWORD in CI variables}"
      echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin "https://${REGISTRY_ADDR}"

      # Resolve build context for both monorepo and subproject cases
      CTX=""
      for c in "${CONTEXT_PATH}" "nextjs-poc" "."; do
        if [ -d "$c" ] && [ -f "$c/Dockerfile" ]; then CTX="$c"; break; fi
      done
      [ -n "${CTX}" ] || { echo "No valid build context found (tried ${CONTEXT_PATH}, nextjs-poc, .)"; ls -la; exit 1; }
      echo "Build image from ${CTX}"
      docker build -t "${IMAGE_TAG}" "${CTX}"

      echo "Push image"
      docker push "${IMAGE_TAG}"
  artifacts:
    expire_in: 1 day
    reports:
      dotenv: build.env
    paths:
      - build.env
  only:
    - main

# -------- DEPLOY --------
deploy:
  stage: deploy
  extends: .docker_job
  dependencies:
    - build-image
  script:
    - |
      echo "IMAGE_TAG from artifacts: ${IMAGE_TAG:-<empty>}"
      [ -n "${IMAGE_TAG:-}" ] || { echo "IMAGE_TAG is empty"; exit 1; }

      echo "Login to registry"
      echo "$REGISTRY_PASSWORD" | docker login -u "$REGISTRY_USER" --password-stdin "https://${REGISTRY_ADDR}"

      echo "Pull ${IMAGE_TAG}"
      docker pull "${IMAGE_TAG}"

      echo "Restart container"
      docker rm -f nextjs-poc || true
      # Next.js defaults to 3000; map host 3333 -> container 3000
      docker run -d --name nextjs-poc -p 3333:3000 "${IMAGE_TAG}"

      sleep 3
      docker ps --format 'table {{.Names}}\t{{.Image}}\t{{.Status}}'
      echo "Deployment done"
  only:
    - main
