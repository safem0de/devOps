stages:
  # - test
  # - sonar
  - build
  - deploy

# test-job:
#   stage: test
#   image: node:20
#   tags:
#     - docker
#   script:
#     - echo "âœ… Running Jest tests..."
#     - cd nextjs-poc
#     - npm install
#     - npm test -- --coverage --coverageReporters=lcov
#   artifacts:
#     paths:
#       - nextjs-poc/coverage/
#     expire_in: 1 week

# sonarqube-check:
#   stage: sonar
#   image: sonarsource/sonar-scanner-cli:latest
#   tags:
#     - docker
#   script:
#     - echo "ðŸ§  Running SonarQube analysis..."
#     - cd nextjs-poc
#     - sonar-scanner 
#         -Dsonar.projectKey=test-pipeline-nextjs 
#         -Dsonar.sources=src 
#         -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info 
#         -Dsonar.host.url=$SONAR_HOST_URL 
#         -Dsonar.login=$SONAR_TOKEN 
#   allow_failure: true

build-image:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
      command: ["--insecure-registry=gitlab:5005"]
  tags:
    - docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
    IMAGE_TAG: "${CI_COMMIT_SHORT_SHA}"
  script:
    - echo "ðŸ”§ Building Docker image..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "http://gitlab:5005"
    - docker build -t "gitlab:5005/root/test-pipeline:${IMAGE_TAG}" nextjs-poc
    - docker push "gitlab:5005/root/test-pipeline:${IMAGE_TAG}"
  only:
    - main
  artifacts:
    name: "docker-image-${CI_COMMIT_SHORT_SHA}"
    expire_in: 1 week

deploy:
  stage: deploy
  image: alpine:latest
  tags:
    - docker
  script:
    - echo "ðŸš€ Deploying container..."
    - apk add --no-cache docker-cli
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" registry.gitlab:5005
    - docker pull "registry.gitlab:5005/root/test-pipeline:${CI_COMMIT_SHORT_SHA}"
    - docker stop nextjs-poc || true
    - docker rm nextjs-poc || true
    - docker run -d --name nextjs-poc -p 3333:3333 "registry.gitlab:5005/root/test-pipeline:${CI_COMMIT_SHORT_SHA}"
  only:
    - main